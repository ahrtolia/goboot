// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"goboot/pkg"
	"goboot/pkg/config/nacos"
	"goboot/pkg/gin"
	"goboot/pkg/gorm"
	"goboot/pkg/logger"
)

// Injectors from wire.go:

func CreateApp(cf string) (*app.App, error) {
	iConfigClient, err := nacos.NewNacosConfigClient(cf)
	if err != nil {
		return nil, err
	}
	viper, err := nacos.MergeNacosConfig(cf, iConfigClient)
	if err != nil {
		return nil, err
	}
	manager := logger.NewLoggerManager(viper)
	option := gin.NewOptions(manager, viper)
	server := gin.New(manager, option)
	appApp, err := app.New(cf, manager, server)
	if err != nil {
		return nil, err
	}
	return appApp, nil
}

// wire.go:

var providerSet = wire.NewSet(nacos.ProviderSet, logger.ProviderSet, gin.ProviderSet, app.ProviderSet, gorm.ProviderSet)
